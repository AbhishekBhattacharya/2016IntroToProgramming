{"filter":false,"title":"plainChar.h","tooltip":"/15FinalProject/plainChar.h","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":36,"column":2},"action":"insert","lines":["class plainCharacter : public Character {","public:","    plainCharacter() {","        name = \"Default Name\";","        //Randomize speed","        srand(time(NULL));","        speed = rand() % 100;","        health = 100;","        attackPower = 100;","        pronoun = string(\"s/he\");","        item = new Brush();","    }","    virtual string takeDamage(int damage) {","        health = health - damage;","        std::cout << \"Health: \" << health << endl;","        return string(\"'Tis but a scratch!\");","    }","    int attack(string attackType) {","       // srand(time(NULL));","        //return (rand() % 10) + 1 ;","        cout << \"Attack: \" << endl;","        return 10;","    }","    ","      //losing message. Should be dynamic. Perhaps showing which weapons they lost with or battle statistics.","     string loseMessage() {","        return string(\"I lost\");","    }","","    //Same as lostMessage, but for winning","    //win message. Should be dynamic.","     string winMessage() {","        return string(\"I Win\");","    }","private:","","};"]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":6},"end":{"row":0,"column":20},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1430839727742,"hash":"d9558af78adb734777df313d6a5b927560735c76"}